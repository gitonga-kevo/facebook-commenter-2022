import logging
from pickle import FALSE
import threading
from operator import index
import time
from xml.dom.minidom import Element
from xml.etree.ElementTree import Comment
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
PATH = "C:\Program Files (x86)\chromedriver.exe"
driver = webdriver.Chrome(PATH)
driver.get("https://web.facebook.com/groups/feed/")
# create action chain object
action = ActionChains(driver)
time.sleep(5)
comment_boxes = []
all_commented_boxes = []
message = "Hello Guys, how is your day?"
def login():
    email = driver.find_element(By.ID, "email")
    password = driver.find_element(By.ID,"pass")
    email.send_keys("jumajohn95@yahoo.com")
    password.send_keys("Pass@123")
    password.submit()
def get_posts():
    comment = threading.Thread(target = click_on_comment_box)
    while(check_Status()=="TRUE"):
        element = []
        try:
            #get comment input boxes and remove redundancies
            time.sleep(10)
            #driver.execute_script("window.scrollTo(0, +1000)")
            element = driver.find_elements(By.XPATH, "//div[text()='Press Enter to post.']")
            print(len(element))
            for x in element:
                if x in all_commented_boxes or x in comment_boxes:#if x is in either, the script with repeat comments
                    element.remove(x)
                else:
                    comment_boxes.append(x)
            if comment.is_alive() == False:
                comment.start()
        except:
            break
def saySomething(output):
    from pynput.keyboard import Key,Controller
    import time
    keyboard = Controller()
    keyboard.type(output)
    keyboard.press(Key.enter)
    keyboard.release(Key.enter)
def check_Status():
    try:
        driver.title
        return "TRUE"
    except:
        return "FALSE"
def click_on_comment_box():
    time.sleep(30)
    while(comment_boxes!=[]):
        for inputbox in comment_boxes:
            location = inputbox.location
            size = inputbox.size
            w, h = size['width'], size['height']
            x, y = location['x'], location['y']

            print(location)
            print(size)
            print(x, y)
            action.move_to_element_with_offset(driver.find_element(By.TAG_NAME,'body'), 0,0)
            action.move_to_element(inputbox)
            action.move_by_offset(0, -17).click().perform()
            saySomething(message)
            all_commented_boxes.append(inputbox)
            comment_boxes.remove(inputbox)
            time.sleep(5)
        time.sleep(10)
 
login()
t = threading.Thread(target=get_posts)#this thread will run while the selenium driver is active
t.start()
